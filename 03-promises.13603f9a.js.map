{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAaF,SAASG,iBAAiB,SAAS,GAChDC,EAAYJ,SAASG,iBAAiB,SAAS,GAC/CE,EAASL,SAASG,iBAAiB,SAAS,GAC9CG,EAAa,EAGjB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAaC,KAAKC,SAAW,GACnCC,YAAW,WACPH,EACFF,EAAQ,CAAEH,WAAUC,UAIpBG,EAAO,CAAEJ,WAAUC,S,GAElBA,E,IAoCPV,EAAOkB,iBAAiB,UA/BxB,SAAsBC,GACpBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAOgB,MAAOD,IAIvB,IAANA,EACFb,EAAca,EAAGlB,EAAWmB,OAAOC,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACnDe,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAoCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,kB,IAEjEmB,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACpBe,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAmCF,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,kB,IAI5DW,GAAK,GAEZb,EAAca,GADdd,GAA0BwB,SAAS1B,EAAUiB,QACfS,SAAS5B,EAAWmB,QAAQC,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAC1Ee,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAoCC,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,kB,IAEjEmB,OAAM,SAAAL,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACpBe,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAmCF,OAAfnB,EAAS,QAAYmB,OAANlB,EAAM,kB,IAOvEH,EAAa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst myform = document.querySelector(\"form\");\nconst firstDelay = document.querySelectorAll(\"input\")[0];\nconst delayStep = document.querySelectorAll(\"input\")[1];\nconst amount = document.querySelectorAll(\"input\")[2];\nlet storageVar = 0;\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const canResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n    if (canResolve) {\n      resolve({ position, delay });\n    }\n    \n    else {\n      reject({ position, delay });\n    }\n    }, delay)\n  })\n}\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  for (let i = 1; i <= amount.value; i++){\n\n    \n\n    if (i === 1) {\n      createPromise(i, firstDelay.value).then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay} milliseconds.`);\n      })\n        .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} milliseconds.`);  \n        })\n    }\n\n    else if (i >= 2) {\n      storageVar = storageVar + parseInt(delayStep.value);\n      createPromise(i, storageVar + parseInt(firstDelay.value)).then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay} milliseconds.`);\n      })\n        .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay} milliseconds.`); \n        })\n    }\n\n    \n\n  }\n  storageVar = 0;\n}\n\nmyform.addEventListener(\"submit\", handleSubmit);\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$myform","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","querySelectorAll","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$storageVar","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","canResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","parseInt"],"version":3,"file":"03-promises.13603f9a.js.map"}